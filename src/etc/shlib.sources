# -*- mode: shell-script -*-
## Begin shlib

[ "$_shlib_loaded" ] && return 0

export SHLIB_PATH=${SHLIB_PATH:-"/usr/lib/shlib"}

export SHLIB_PREFIX=${SHLIB_PREFIX:-"lib"}
export SHLIB_SUFFIX=${SHLIB_SUFFIX:-".sh"}
export SHLIB_AUTOLOAD_PATH=$SHLIB_PATH/autoload


NL=$'\n'
_shlib_included=${_shlib_included:-$NL}
export _shlib_included


_shlib_load() {
    local filename="$1" fun
    read _ fn _ < <(caller 0)
    [[ $_shlib_included == *"$NL$filename$NL"* ]] && return 0
    if ! test -f "$filename" -a -r "$filename"; then
        echo "$fn: error: file '$filename' cannot be open for read." >&2
        exit 1
    fi
    . "$filename" || {
        echo "$fn: error: file '$filename' failed while sourcing." >&2
        return 1
    }
    for fun in $(egrep "^\s*(function\s+)?[a-zA-Z_0-9-]+\s*\(\s*\)\s*(\{.*)?$" "$filename" |
                        cut -f 1 -d "(" | sort -u); do
        [ "$fun" == "function" ] && continue
        export -f "$fun"
    done
    _shlib_included+=$filename$NL
}
export -f _shlib_load


include() {
    for label in "$@"; do
        _shlib_load "$SHLIB_PATH/$SHLIB_PREFIX$label$SHLIB_SUFFIX"
    done
}
export -f include


autoload() {
    [ -d "$SHLIB_AUTOLOAD_PATH" ] || return 0  ## ignore if no autoload directory
    for script in "$SHLIB_AUTOLOAD_PATH"/*.sh; do
        [ -f "$script" ] || continue
        _shlib_load "$script"
    done
}


autoload || {
    echo "Fatal: shlib: autoload failed." >&2
    exit 1
}

export _shlib_loaded=1

## End shlib
